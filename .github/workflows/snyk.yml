name: Snyk Security Scan

on:
  pull_request:
    types: [opened, reopened, edited, synchronize, closed]
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC
  workflow_call:
    secrets:
      SNYK_TOKEN:
        required: true
        description: 'Snyk API Token'
      SNYK_ORG_ID:
        required: true
        description: 'Snyk Organization ID'
      SNYK_SLACK_WEBHOOK_URL:
        required: false

jobs:
  vulnerability-scan:
    runs-on: ubuntu-latest
    env:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      SNYK_ORG_ID: ${{ secrets.SNYK_ORG_ID }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v5

      - name: Build Docker image
        run: |
          docker build . --file Dockerfile-WorkFlow --tag laa-record-link-service:latest --progress=plain --no-cache

      - name: Snyk Docker Vulnerability Test
        continue-on-error: true
        run: |
          npm install -g snyk
          snyk test --docker laa-record-link-service:latest \
            --org=${{ secrets.SNYK_ORG_ID }} \
            --auth=${{ secrets.SNYK_TOKEN }} \
            --sarif \
            --sarif-file-output=snyk_docker_test.sarif \
            --exit-code=0

      - name: Debug SARIF File Creation
        run: |
          echo "==> List files in workspace:"
          ls -lah
          echo "==> Check if snyk_docker_test.sarif exists:"
          if [ -f snyk_docker_test.sarif ]; then
            echo "SARIF file created."
          else
            echo "SARIF file NOT created."
          fi

      - name: Replace null severities in SARIF
        run: sed -i 's/"null"/"0"/g' snyk_docker_test.sarif || echo "No replacement needed"

      - name: Run Snyk Gradle Test
        uses: snyk/actions/gradle@master
        continue-on-error: true
        with:
          command: test --sarif
          args: --org=${{ secrets.SNYK_ORG_ID }} --sarif-file-output=snyk_test.sarif

      - name: Replace undefined severities
        run: sed -i 's/"undefined"/"0"/g' snyk_test.sarif || echo "No replacement needed"

      - name: Run Snyk Code Test
        uses: snyk/actions/gradle@master
        continue-on-error: true
        with:
          command: code test --sarif
          args: --org=${{ secrets.SNYK_ORG_ID }} --sarif-file-output=snyk_code_test.sarif

      - name: Snyk IaC Scan
        uses: snyk/actions/gradle@master
        continue-on-error: true
        with:
          command: iac test --sarif
          args: --org=${{ secrets.SNYK_ORG_ID }} --sarif-file-output=snyk_iac_test.sarif

      - name: Collect SARIF Files
        run: |
          mkdir -p sarif_files
          mv snyk_test.sarif snyk_code_test.sarif snyk_iac_test.sarif snyk_docker_test.sarif sarif_files/ || echo "Some SARIF files missing"

      - name: Upload results to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: sarif_files

      - name: Count vulnerabilities by severity
        run: |
          chmod +x ./count_snyk_vulns.sh
          ./count_snyk_vulns.sh sarif_files/*.sarif > severity_counts.txt
          cat severity_counts.txt
          grep CRITICAL severity_counts.txt >> $GITHUB_ENV || echo "CRITICAL=0" >> $GITHUB_ENV
          grep HIGH severity_counts.txt >> $GITHUB_ENV || echo "HIGH=0" >> $GITHUB_ENV
          grep MEDIUM severity_counts.txt >> $GITHUB_ENV || echo "MEDIUM=0" >> $GITHUB_ENV
          grep LOW severity_counts.txt >> $GITHUB_ENV || echo "LOW=0" >> $GITHUB_ENV

      - name: Set SHOULD_NOTIFY flag
        run: |
          if [ "${CRITICAL:-0}" -ne 0 ] || [ "${HIGH:-0}" -ne 0 ] || [ "${MEDIUM:-0}" -ne 0 ] || [ "${LOW:-0}" -ne 0 ]; then
            echo "SHOULD_NOTIFY=true" >> $GITHUB_ENV
          else
            echo "SHOULD_NOTIFY=false" >> $GITHUB_ENV
          fi

      - name: Notify Slack (if enabled)
        id: slack
        if: always() && env.SHOULD_NOTIFY == 'true' && (github.event_name == 'schedule' || github.event_name == 'workflow_dispatch')
        uses: slackapi/slack-github-action@v2.1.1
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": { "type": "plain_text", "text": "SNYK Vulnerability Scan Report: ${{ github.event.repository.name }}" }
                },
                {
                  "type": "section",
                  "text": { "type": "mrkdwn", "text": "*Scan Summary:*" }
                },
                {
                  "type": "section",
                  "text": { "type": "mrkdwn", "text": ":rotating_light: *CRITICAL:* ${{ env.CRITICAL }}" }
                },
                {
                  "type": "section",
                  "text": { "type": "mrkdwn", "text": ":sign-warning: *HIGH:* ${{ env.HIGH }}" }
                },
                {
                  "type": "section",
                  "text": { "type": "mrkdwn", "text": ":orange_heart: *MEDIUM:* ${{ env.MEDIUM }}" }
                },
                {
                  "type": "section",
                  "text": { "type": "mrkdwn", "text": ":yellow_heart: *LOW:* ${{ env.LOW }}" }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Please review the scan results. \n\nView on GitHub: https://github.com/${{ github.repository }}/security/code-scanning"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SNYK_SLACK_WEBHOOK_URL }}

      - name: Fail build if vulnerabilities found
        run: |
          if [ "${CRITICAL:-0}" -gt 0 ] || [ "${HIGH:-0}" -gt 0 ] || [ "${MEDIUM:-0}" -gt 0 ] || [ "${LOW:-0}" -gt 0 ]; then
            echo "Vulnerabilities found â€” failing build."
            exit 1
          else
            echo "No vulnerabilities found."
          fi
